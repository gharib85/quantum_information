p=0.90;
rho_2=p*rho+(1-p)*eye(3)/3;

%some useful operators
gen_CNOT=blkdiag(prime_weyl_operators(3,0,0),prime_weyl_operators(3,0,1),prime_weyl_operators(3,0,2));
R=[1 1 omega; 1 omega 1; 1 omega^2 omega^2];
R=R*sqrt(3/trace(R*R'))/( 0.8660 + 0.5000i)^(1/3);
G=[1 1 1;omega omega^2 1;omega^2 omega 1]/sqrt(3);

rotations=zeros(3,3,4);
rotations(:,:,1)=eye(3);
rotations(:,:,2)=(R*prime_weyl_operators(3,2,0))';
rotations(:,:,3)=(R*prime_weyl_operators(3,2,0))'^2;
rotations(:,:,4)=(prime_weyl_operators(3,2,0)*G*(R*prime_weyl_operators(3,2,0))^2)';

%the correction circuit
C=cX_1j(3,3,2)*kron(SWAP,eye(3))*cX_1j(3,3,3)^2*kron(SWAP,eye(3))*cX_1j(3,3,3);
C=cX_1j(3,3,2)*kron(rotations(:,:,2),eye(9))*C;
C=cX_1j(3,3,2)*kron(rotations(:,:,3),eye(9))*C;
C=cX_1j(3,3,2)*kron(rotations(:,:,4),eye(9))*C;



P=kron(eye(3),kron([1 0 0; 0 0 0; 0 0 0],[1 0 0; 0 0 0; 0 0 0]));

rho_3=P*C*kron(rho_2,kron(rho_2,rho_2))*C'*P;
rho_3=rho_3/trace(rho_3);
rho_3=TrX(rho_3,[2 3],[3 3 3]);


% sps the prep procedure is to prepare the target magic state with probability p or to prepare the zero state with probability 1-p
%rho_3=three_qutrit_code(rho_2,rho_2,rotations(:,:,1));
% rho_3=three_qutrit_code(rho_3,rho_3,rotations(:,:,2));
% rho_3=three_qutrit_code(rho_3,rho_3,rotations(:,:,3));
% rho_3=three_qutrit_code(rho_3,rho_3,rotations(:,:,4));


%%% running the large circuit to correct 0 and + errors 
% U=(R*prime_weyl_operators(3,2,0))';
% C_new=cX_1j(3,5,4)*cX_1j(3,5,5)*kron(U,kron(eye(9),kron(U,U)))*kron(C,eye(9));
% P_new=kron(P,kron([1 0 0; 0 0 0; 0 0 0],[1 0 0; 0 0 0; 0 0 0]));
% 
% rho_3=P_new*C_new*kron(rho_2,kron(rho_2,kron(rho_2,kron(rho_2,rho_2))))*C_new'*P_new;
% rho_3=rho_3/trace(rho_3);
% rho_3=TrX(rho_3,[2 3 4 5],[3 3 3 3 3])
